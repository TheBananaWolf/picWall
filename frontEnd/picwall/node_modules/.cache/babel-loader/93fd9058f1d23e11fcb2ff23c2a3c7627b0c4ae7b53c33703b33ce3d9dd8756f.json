{"ast":null,"code":"var _jsxFileName = \"E:\\\\picWall\\\\frontEnd\\\\picwall\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const url = \"http://localhost:8080/showimage\";\n  const [imgSrc, setImgSrc] = useState(null);\n  useEffect(() => {\n    const fetchImage = () => {\n      fetch(url).then(response => response.blob()) // Assuming the server responds with an image\n      .then(imageBlob => {\n        const imageObjectURL = URL.createObjectURL(imageBlob);\n        setImgSrc(imageObjectURL);\n      }).catch(error => console.error('Error fetching the image:', error));\n    };\n    fetchImage(); // Fetch immediately on mount\n\n    const intervalId = setInterval(fetchImage, 3000); // Fetch every 3000 milliseconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, []); // Empty dependency array ensures this effect runs only once after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: imgSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imgSrc,\n      alt: \"Dynamic from server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 66\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Rxc+5LYzXyTnmDg8veUjSLSqj8Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","jsxDEV","_jsxDEV","App","_s","url","imgSrc","setImgSrc","useEffect","fetchImage","fetch","then","response","blob","imageBlob","imageObjectURL","URL","createObjectURL","catch","error","console","intervalId","setInterval","clearInterval","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/picWall/frontEnd/picwall/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const url = \"http://localhost:8080/showimage\";\n  const [imgSrc, setImgSrc] = useState(null);\n\n  useEffect(() => {\n    const fetchImage = () => {\n      fetch(url)\n        .then(response => response.blob()) // Assuming the server responds with an image\n        .then(imageBlob => {\n          const imageObjectURL = URL.createObjectURL(imageBlob);\n          setImgSrc(imageObjectURL);\n        })\n        .catch(error => console.error('Error fetching the image:', error));\n    };\n\n    fetchImage(); // Fetch immediately on mount\n\n    const intervalId = setInterval(fetchImage, 3000); // Fetch every 3000 milliseconds\n\n    return () => clearInterval(intervalId); // Cleanup interval on component unmount\n  }, []); // Empty dependency array ensures this effect runs only once after initial render\n\n  return (\n    <div className=\"App\">\n      {imgSrc ? <img src={imgSrc} alt=\"Dynamic from server\" /> : <p>Loading...</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAMC,GAAG,GAAG,iCAAiC;EAC7C,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE1CQ,SAAS,CAAC,MAAM;IACd,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvBC,KAAK,CAACL,GAAG,CAAC,CACPM,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;MAAA,CAClCF,IAAI,CAACG,SAAS,IAAI;QACjB,MAAMC,cAAc,GAAGC,GAAG,CAACC,eAAe,CAACH,SAAS,CAAC;QACrDP,SAAS,CAACQ,cAAc,CAAC;MAC3B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC,CAAC;IACtE,CAAC;IAEDV,UAAU,CAAC,CAAC,CAAC,CAAC;;IAEd,MAAMY,UAAU,GAAGC,WAAW,CAACb,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;;IAElD,OAAO,MAAMc,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,KAAK;IAAAC,QAAA,EACjBnB,MAAM,gBAAGJ,OAAA;MAAKwB,GAAG,EAAEpB,MAAO;MAACqB,GAAG,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG7B,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzE,CAAC;AAEV;AAAC3B,EAAA,CA3BQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}